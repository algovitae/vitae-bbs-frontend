### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Auth {
  token: String
  userIdentity: UserIdentity
}

type Group implements Node {
  groupName: String!

  """unique identifier for the resource"""
  id: ID!
  memberships: [Membership!]!
  threads: [Thread!]!
}

type Membership implements Node {
  group: Group!
  groupId: String!

  """unique identifier for the resource"""
  id: ID!
  user: User!
  userId: String!
}

type Mutation {
  addMembership(groupId: String!, userId: String!): Membership
  createGroup(groupName: String!, memberships: [String!]!): Group
  createThread(groupId: String!, threadName: String!): Thread
  createThreadComment(body: String!, threadId: String!, title: String!): ThreadComment
  deleteMembership(groupId: String!, userId: String!): Group
  login(email: String!, password: String!): Auth
  resetPassword(email: String!): Boolean!
}

interface Node {
  """unique identifier for the resource"""
  id: ID!
}

type Query {
  allUsers: [User!]!
  group(id: String!): Group
  thread(id: String!): Thread
  userIdentityByAuthorization: UserIdentity
}

type Thread implements Node {
  comments: [ThreadComment!]!
  groupId: String!

  """unique identifier for the resource"""
  id: ID!
  threadName: String!
}

type ThreadComment implements Node {
  body: String!
  commentedAt: String!
  commentedBy: User!

  """unique identifier for the resource"""
  id: ID!
  threadId: String!
  title: String!
}

type User implements Node {
  """unique identifier for the resource"""
  id: ID!
  memberships: [Membership!]!
  userName: String!
}

type UserIdentity implements Node {
  email: String!

  """unique identifier for the resource"""
  id: ID!
  passwordHash: String!
  user: User
  userId: String!
}